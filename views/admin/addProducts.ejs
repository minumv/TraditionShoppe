<%- include('../layout/adminHeader') %>
<style>
  .input-group {
    /* display  : flex;
    flex-direction: column; */
  position:relative;
  width : 100%;
  /* //background-color: aqua; */
  margin-bottom: 25px;
} 
  .error{
    position:absolute;
    right:8px;
    top:10px;
   color:#ed1557;
   font-size: 13px;
   font-weight: bold;
}

.error i {
    color:seagreen;
}
</style>
<section>   
      <div class="container">
        <form role="form" id="profile_form" action="" method="post" enctype="multipart/form-data">    
          <!-- /upload -->
          <div class="row ">                    
            <div class="col-6">
                <div class="card card-plain">
                    <div class="card-header">
                      <h4 class="font-weight-bolder">Add new Products</h4>
                      <!-- <p class="mb-0">Enter your email and password to register</p> -->
                    </div>
                    <% if (errorMessage.length > 0) { %>                
                      <div class="alert alert-danger" role="alert"> <%- errorMessage %>  </div>                  
                  <% } %>
                    <% if (successMessage.length > 0) { %>                
                      <div class="alert alert-success" role="alert"> <%- successMessage %>  </div>                    
                    <% } %>
                    <div class="card-body">             
                      <div class="input-group input-group-outline mb-3">
                         <input type="text" id="name" class="form-control" name="name" placeholder="Name"  onkeyup="validateName()" >
                         <span id="name-error" class="error"></span>
                        </div>
                      <!-- <div class="input-group input-group-outline mb-3 ">                 
                        <input type="email" class="form-control" placeholder="Category">
                      </div> -->
                      <div class="input-group input-group-outline d-flex justify-content-center">                  
                        <div class="mx-4">
                          <select id="categoryName" class="form-control" required>
                            <option value="">Select Category</option>
                              <% categories.forEach((row, index) => { %>
                                  <option value="<%= row.category_name %>"><%= row.category_name %></option>
                              <% }) %>
                          </select>
                        </div>
                        <div class="mx-4">
                          <select id="sellerName" class="form-control" required>
                            <option value="">Select Seller</option>
                              <% sellers.forEach((row, index) => { %>
                                  <option value="<%= row.seller_name %>"><%= row.seller_name %></option>
                              <% }) %>
                          </select>
                        </div>
                        <div class="mx-4">
                          <select id="discountName" class="form-control" required>
                            <option value="">Select Discount</option>
                              <% discounts.forEach((row, index) => { %>
                                  <option value="<%= row.discount_name %>"><%= row.discount_name %></option>
                              <% }) %>
                          </select>
                        </div>
                      </div>
                      <div class="input-group input-group-outline mb-3">                  
                        <textarea type="text" id="description" name="description" class="form-control" placeholder="Description" onkeyup="validateDescription()"></textarea>
                        <span id="description-error" class="error"></span>
                      </div>
                      <div class="input-group input-group-outline mb-3">                   
                          <input type="text" id="stock" name="stock" class="form-control" placeholder="Stock" onkeyup="validateStock()" >
                          <span id="stock-error" class="error"></span>
                        </div>
                      <div class="input-group input-group-outline mb-3">                   
                          <input type="text" id="price"  name="price" class="form-control" placeholder="Price per Unit" onkeyup="validatePrice()">
                          <span id="price-error" class="error"></span>
                        </div>
                     
                      </div>
                      <div class="input-group input-group-outline mb-3 d-flex"> 
                        <div class="dropdown mx-3">
                          <select id="material" class="form-control" required>
                            <option value="">Select Material</option>
                              <option value="wood">Wood</option>
                              <option value="fibre">Fibre</option>
                              <option value="brass">Brass</option>
                              <option value="metal">Metal</option>
                              <option value="stone">Stone</option>
                              <option value="bamboo">Bamboo</option>
                              <option value="copper">Copper-alloy</option>
                              <option value="handloom">Handloom</option>
                              <option value="cotton">Cotton</option>
                              <option value="rosewood">Rosewood</option>
                              <option value="metalwood">Metal-wood</option>
                              <option value="Others">Others</option>
                          </select>
                      </div>
                      <div class="mx-3">
                        <select id="color" class="form-control" required>
                          <option value="">Select Color</option>
                          <option value="brown">Brown</option>
                          <option value="white">White</option>
                          <option value="bronze">Bronze</option>
                          <option value="navyblue">Navy Blue</option>
                          <option value="cream">Cream</option>
                            <option value="orange">Orange</option>
                            <option value="gold">Gold</option>
                            <option value="steel">Steel</option>
                            <option value="green">Green</option>
                            <option value="yellow">Yellow</option>
                            <option value="grey">Grey</option>
                            <option value="blue">Blue</option>
                            <option value="red">Red</option>
                            <option value="charcol">Charcol</option>
                            <option value="multi">Multicolor</option>
                            
                        </select>
                      </div>    
                      <div class="mx-3">
                        <select id="type" class="form-control" required>
                          <option value="">Select Type</option>
                          <option value="decor">decor</option>
                          <option value="gifts">gifts</option>
                          <option value="toys">toys</option>
                            <option value="figurine">figurine</option>
                            <option value="accessories">accessories</option>
                            <option value="eco-friendly">eco-friendly</option>
                            <option value="kitchen-utensil">kitchen-utensil</option>
                            <option value="natural-products">natural-products</option>
                            <option value="clothes">clothes</option>
                            <option value="jewellery">jewellery</option>
                            <option value="western">western</option>
                            <option value="others">others</option>
                            
                        </select></div>          
                      <div class="input-group input-group-outline mb-3">                   
                        <input type="text" id="size" name="size" class="form-control" placeholder="Size (inches)" onkeyup="validateSize()">
                        <span id="size-error" class="error"></span>
                      </div>
                      <div class="input-group input-group-outline mb-3">                   
                        <input type="text" id="weight" name="weight" class="form-control" placeholder="Weight (grams)" onkeyup="validateWeight()">
                        <span id="weight-error" class="error"></span>
                      </div>                
                      </div>
                      <div class="input-group input-group-outline mb-3 d-flex"> 
                       
                        

                      <div>
                           <input type="file" class="form-control mx-3" 
                            id="file-input" name="croppedImage" accept="image/*" 
                            onchange="handleFileInputChange(event)" multiple required>                            
                      </div>             
                    </div>
                        
                        <div class="text-center d-flex justify-content-end">                         
                            <button  id="addButton" type="submit"  class="btn btn-lg bg-gradient-primary btn-lg w-100 mt-4 mb-0 me-2">Submit</button>
                         </div>
                      
                    </div>
                  
                </div> 
             
            <div class="col-6 d-block " id="images">
              <div id="imgdiv1" class="w-100 d-flex" style="height: 250px; visibility: hidden;">
                  <div class="d-block">
                      <img id="inputImg1" src="" alt="" style="display: block; max-width: 100%;">
                  </div>                 
              </div>
              <div id="imgdiv2" class="w-100 d-flex" style="height: 250px; visibility: hidden;">
                <div class="d-block">
                    <img id="inputImg2" src="" alt="" style="display: block; max-width: 100%;">
                </div>                 
            </div>
            <div id="imgdiv3" class="w-100 d-flex" style="height: 250px; visibility: hidden;">
              <div class="d-block">
                  <img id="inputImg3" src="" alt="" style="display: block; max-width: 100%;">
              </div>                 
          </div>
              </div>
            </div>
            

          
        </form>        
       </div>   
       <!-- <div id="overlay"></div> -->
  </section>
<script>
  const nameError = document.getElementById('name-error')
	const stockError = document.getElementById('stock-error')
	const descriptionError = document.getElementById('description-error')
	const sizeError = document.getElementById('size-error')
	const weightError = document.getElementById('weight-error')
	const priceError = document.getElementById('price-error')

  function validateName(){
		const name = document.getElementById('name').value
	
		if(name.length === 0){
			nameError.innerHTML = 'Name is required'
			return false
		}
		if(!name.match(/^[a-zA-Z]+[\-'\s]?[a-zA-Z ]+$/)){
			nameError.innerHTML = 'Name should be valid'
			return false
		}
		nameError.innerHTML = '<i class = "fas fa-check-circle"></i>'
		return true
	}
  function validateDescription(){
		const description = document.getElementById('description').value
	
		if(description.length === 0){
			descriptionError.innerHTML = 'Description is required'
			return false
		}
		
		descriptionError.innerHTML = '<i class = "fas fa-check-circle"></i>'
		return true
	}

  function validateStock(){
		const stock = document.getElementById('stock').value
	
		if(stock.length === 0){
			stockError.innerHTML = 'Stock is required'
			return false
		}
		if(!stock.match(/^(?!0)\d{1,5}$/)){
			nameError.innerHTML = 'Stock should be valid'
			return false
		}
		nameError.innerHTML = '<i class = "fas fa-check-circle"></i>'
		return true
	}
  function validatePrice(){
		const price = document.getElementById('price').value
	
		if(price.length === 0){
			priceError.innerHTML = 'Price is required'
			return false
		}
		if(!price.match(/^(?!0)\d{1,4}(?:\.\d+)?$/)){
			priceError.innerHTML = 'Price should be valid'
			return false
		}
		priceError.innerHTML = '<i class = "fas fa-check-circle"></i>'
		return true
	}

  function validateSize(){
		const size = document.getElementById('size').value
	
		if(size.length === 0){
			sizeError.innerHTML = 'Size is required'
			return false
		}
		if(!size.match(/^(?!0)\d{1,4}(?:\.\d+)?$/)){
			sizeError.innerHTML = 'Size should be valid'
			return false
		}
		sizeError.innerHTML = '<i class = "fas fa-check-circle"></i>'
		return true
	}

  function validateWeight(){
		const weight = document.getElementById('weight').value
	
		if(weight.length === 0){
			weightError.innerHTML = 'Weight is required'
			return false
		}
		if(!weight.match(/^(?!0)\d{1,4}(?:\.\d+)?$/)){
			weightError.innerHTML = 'Weight should be valid'
			return false
		}
		weightError.innerHTML = '<i class = "fas fa-check-circle"></i>'
		return true
	}
  
  
  let cropper ;
  let imageArray = []
  let previewDiv = document.getElementById('imgdiv1')
  let preview = document.getElementById('inputImg1')
    
  function handleFileInputChange(event) {
    
    // const files = event.target.files;
    // if (files && files.length > 0) {
    //     const file = files[0]; 
    //     const reader = new FileReader(); 
        
    //     reader.onload = function(e) {
    //         previewDiv.style.visibility = 'visible';
    //         preview.src = e.target.result;
    //     };        
    //     reader.readAsDataURL(file);
    // }}

    const files = event.target.files; // Get the selected files
    console.log("files :",files);
    // Iterate through each file
   
    for (let i = 0; i < files.length; i++) {
        const reader = new FileReader(); // Create a new FileReader instance

        // Define a callback function to handle the FileReader's onload event
        reader.onload = function(event) {
            const imgSrc = event.target.result; // Get the base64 data URL of the image
            const imgIndex = i + 1; // Index of the image (e.g., img1, img2, etc.)
            const inputImgId = `inputImg${imgIndex}`; // ID of the input image element
            const imgElement = document.getElementById(inputImgId); // Get the input image element

            // Set the src attribute of the input image element to display the preview
            imgElement.src = imgSrc;
            imageArray.push(imgSrc)

            // Show the image container
            const imgContainerId = `imgdiv${imgIndex}`;
            document.getElementById(imgContainerId).style.visibility = 'visible';
           
            initializeCropperForImage(i+1);
        };

        // Read the selected file as a data URL (base64)
      //  console.log("reader value :",readAsDataURL(files[i]))
        reader.readAsDataURL(files[i]);
        
    }
  }

  const croppers = [];

function initializeCropperForImage(inputIndex) {
    const imageId = `inputImg${inputIndex}`;
    console.log(imageId);
    cropper = new Cropper(document.getElementById(imageId), {
        // Add Cropper.js options here
        aspectRatio:1/1
       
    });
    console.log(`cropper${imageId} :`,cropper);

    // Save cropper instance
    croppers.push(cropper);
    console.log('croppers :',inputIndex ,":",croppers)
}

  // preview.addEventListener('load',function(events){
  //   cropper = new Cropper(preview,{
  //     aspectRatio:1/1
  //   })
  // })

  let form = document.getElementById('profile_form')
  let formData = new FormData(form);

    // Display form data in console for testing
   
  form.addEventListener('submit',function(event){
    event.preventDefault()
   
  //  for (let i = 0; i < croppers.length; i++) {
    croppers[2].getCroppedCanvas({
      maxHeight:1000,
      maxWidth:1000
    }).toBlob(function(blob){
      ajaxWithAxios(blob)
    })
   
  // }
  
 
  })


  function ajaxWithAxios(blob){

  
    
    let form = document.getElementById('profile_form');
    console.log("form: ",form)
    let formData = new FormData(form)
    for (var pair of formData.entries()) {
        console.log(pair[0] + ': ' + pair[1]);
        
    }
    console.log("blob :",blob)
    formData.append('croppedImage',blob);
    console.log("crr",formData.croppedImage)
    console.log("formdata: ",formData)
    console.log('Form data length:', formData.size); // Check the size property
console.log('Form data keys:', formData.keys()); // Log the keys
for (const key of formData.keys()) {
    console.log(key + ':', formData.get(key));
}
   

$.ajax('/uploadPdtImage', {
  method: 'POST',
  data: formData,
  processData: false,
  contentType: false,
  success() {
    console.log("uploaded")
    location.href='/admin/products'
  },
  error() {
    location.href='/newProducts'
    console.log('Upload error');
  },
});
 }
  

</script>

  <%- include('../layout/adminFooter') %>